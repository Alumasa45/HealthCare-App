/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ThemeDemoRouteImport } from './routes/theme-demo'
import { Route as SignUpRouteImport } from './routes/signUp'
import { Route as ServicesRouteImport } from './routes/services'
import { Route as PharmaciesRouteImport } from './routes/pharmacies'
import { Route as LoginRouteImport } from './routes/login'
import { Route as HealthblogRouteImport } from './routes/healthblog'
import { Route as ContactsRouteImport } from './routes/contacts'
import { Route as AboutUsRouteImport } from './routes/aboutUs'
import { Route as LayoutRouteRouteImport } from './routes/_layout/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DoctorSlotsRouteImport } from './routes/doctor/slots'
import { Route as DoctorScheduleRouteImport } from './routes/doctor/schedule'
import { Route as DoctorReportsRouteImport } from './routes/doctor/reports'
import { Route as DoctorPrescriptionsRouteImport } from './routes/doctor/prescriptions'
import { Route as DoctorPatientsRouteImport } from './routes/doctor/patients'
import { Route as DoctorMedicalRecordsRouteImport } from './routes/doctor/medical-records'
import { Route as DoctorAppointmentsRouteImport } from './routes/doctor/appointments'
import { Route as AdminUsersRouteImport } from './routes/admin/users'
import { Route as AdminSystemRouteImport } from './routes/admin/system'
import { Route as AdminReportsRouteImport } from './routes/admin/reports'
import { Route as AdminRegistrationsRouteImport } from './routes/admin/registrations'
import { Route as AdminNotificationsRouteImport } from './routes/admin/notifications'
import { Route as LayoutSettingsRouteImport } from './routes/_layout/settings'
import { Route as LayoutRecordsRouteImport } from './routes/_layout/records'
import { Route as LayoutProfileRouteImport } from './routes/_layout/profile'
import { Route as LayoutPrescriptionsRouteImport } from './routes/_layout/prescriptions'
import { Route as LayoutMessagesRouteImport } from './routes/_layout/messages'
import { Route as LayoutDoctorSlotsRouteImport } from './routes/_layout/doctorSlots'
import { Route as LayoutDoctorDashboardRouteImport } from './routes/_layout/doctorDashboard'
import { Route as LayoutDashboardRouteImport } from './routes/_layout/dashboard'
import { Route as LayoutChatRouteImport } from './routes/_layout/chat'
import { Route as LayoutBillingRouteImport } from './routes/_layout/billing'
import { Route as LayoutAppointmentsRouteImport } from './routes/_layout/appointments'

const ThemeDemoRoute = ThemeDemoRouteImport.update({
  id: '/theme-demo',
  path: '/theme-demo',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpRoute = SignUpRouteImport.update({
  id: '/signUp',
  path: '/signUp',
  getParentRoute: () => rootRouteImport,
} as any)
const ServicesRoute = ServicesRouteImport.update({
  id: '/services',
  path: '/services',
  getParentRoute: () => rootRouteImport,
} as any)
const PharmaciesRoute = PharmaciesRouteImport.update({
  id: '/pharmacies',
  path: '/pharmacies',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const HealthblogRoute = HealthblogRouteImport.update({
  id: '/healthblog',
  path: '/healthblog',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactsRoute = ContactsRouteImport.update({
  id: '/contacts',
  path: '/contacts',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutUsRoute = AboutUsRouteImport.update({
  id: '/aboutUs',
  path: '/aboutUs',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRouteRoute = LayoutRouteRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DoctorSlotsRoute = DoctorSlotsRouteImport.update({
  id: '/doctor/slots',
  path: '/doctor/slots',
  getParentRoute: () => rootRouteImport,
} as any)
const DoctorScheduleRoute = DoctorScheduleRouteImport.update({
  id: '/doctor/schedule',
  path: '/doctor/schedule',
  getParentRoute: () => rootRouteImport,
} as any)
const DoctorReportsRoute = DoctorReportsRouteImport.update({
  id: '/doctor/reports',
  path: '/doctor/reports',
  getParentRoute: () => rootRouteImport,
} as any)
const DoctorPrescriptionsRoute = DoctorPrescriptionsRouteImport.update({
  id: '/doctor/prescriptions',
  path: '/doctor/prescriptions',
  getParentRoute: () => rootRouteImport,
} as any)
const DoctorPatientsRoute = DoctorPatientsRouteImport.update({
  id: '/doctor/patients',
  path: '/doctor/patients',
  getParentRoute: () => rootRouteImport,
} as any)
const DoctorMedicalRecordsRoute = DoctorMedicalRecordsRouteImport.update({
  id: '/doctor/medical-records',
  path: '/doctor/medical-records',
  getParentRoute: () => rootRouteImport,
} as any)
const DoctorAppointmentsRoute = DoctorAppointmentsRouteImport.update({
  id: '/doctor/appointments',
  path: '/doctor/appointments',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSystemRoute = AdminSystemRouteImport.update({
  id: '/admin/system',
  path: '/admin/system',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminReportsRoute = AdminReportsRouteImport.update({
  id: '/admin/reports',
  path: '/admin/reports',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRegistrationsRoute = AdminRegistrationsRouteImport.update({
  id: '/admin/registrations',
  path: '/admin/registrations',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminNotificationsRoute = AdminNotificationsRouteImport.update({
  id: '/admin/notifications',
  path: '/admin/notifications',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutSettingsRoute = LayoutSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutRecordsRoute = LayoutRecordsRouteImport.update({
  id: '/records',
  path: '/records',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutProfileRoute = LayoutProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutPrescriptionsRoute = LayoutPrescriptionsRouteImport.update({
  id: '/prescriptions',
  path: '/prescriptions',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutMessagesRoute = LayoutMessagesRouteImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutDoctorSlotsRoute = LayoutDoctorSlotsRouteImport.update({
  id: '/doctorSlots',
  path: '/doctorSlots',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutDoctorDashboardRoute = LayoutDoctorDashboardRouteImport.update({
  id: '/doctorDashboard',
  path: '/doctorDashboard',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutDashboardRoute = LayoutDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutChatRoute = LayoutChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutBillingRoute = LayoutBillingRouteImport.update({
  id: '/billing',
  path: '/billing',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutAppointmentsRoute = LayoutAppointmentsRouteImport.update({
  id: '/appointments',
  path: '/appointments',
  getParentRoute: () => LayoutRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/aboutUs': typeof AboutUsRoute
  '/contacts': typeof ContactsRoute
  '/healthblog': typeof HealthblogRoute
  '/login': typeof LoginRoute
  '/pharmacies': typeof PharmaciesRoute
  '/services': typeof ServicesRoute
  '/signUp': typeof SignUpRoute
  '/theme-demo': typeof ThemeDemoRoute
  '/appointments': typeof LayoutAppointmentsRoute
  '/billing': typeof LayoutBillingRoute
  '/chat': typeof LayoutChatRoute
  '/dashboard': typeof LayoutDashboardRoute
  '/doctorDashboard': typeof LayoutDoctorDashboardRoute
  '/doctorSlots': typeof LayoutDoctorSlotsRoute
  '/messages': typeof LayoutMessagesRoute
  '/prescriptions': typeof LayoutPrescriptionsRoute
  '/profile': typeof LayoutProfileRoute
  '/records': typeof LayoutRecordsRoute
  '/settings': typeof LayoutSettingsRoute
  '/admin/notifications': typeof AdminNotificationsRoute
  '/admin/registrations': typeof AdminRegistrationsRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/system': typeof AdminSystemRoute
  '/admin/users': typeof AdminUsersRoute
  '/doctor/appointments': typeof DoctorAppointmentsRoute
  '/doctor/medical-records': typeof DoctorMedicalRecordsRoute
  '/doctor/patients': typeof DoctorPatientsRoute
  '/doctor/prescriptions': typeof DoctorPrescriptionsRoute
  '/doctor/reports': typeof DoctorReportsRoute
  '/doctor/schedule': typeof DoctorScheduleRoute
  '/doctor/slots': typeof DoctorSlotsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/aboutUs': typeof AboutUsRoute
  '/contacts': typeof ContactsRoute
  '/healthblog': typeof HealthblogRoute
  '/login': typeof LoginRoute
  '/pharmacies': typeof PharmaciesRoute
  '/services': typeof ServicesRoute
  '/signUp': typeof SignUpRoute
  '/theme-demo': typeof ThemeDemoRoute
  '/appointments': typeof LayoutAppointmentsRoute
  '/billing': typeof LayoutBillingRoute
  '/chat': typeof LayoutChatRoute
  '/dashboard': typeof LayoutDashboardRoute
  '/doctorDashboard': typeof LayoutDoctorDashboardRoute
  '/doctorSlots': typeof LayoutDoctorSlotsRoute
  '/messages': typeof LayoutMessagesRoute
  '/prescriptions': typeof LayoutPrescriptionsRoute
  '/profile': typeof LayoutProfileRoute
  '/records': typeof LayoutRecordsRoute
  '/settings': typeof LayoutSettingsRoute
  '/admin/notifications': typeof AdminNotificationsRoute
  '/admin/registrations': typeof AdminRegistrationsRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/system': typeof AdminSystemRoute
  '/admin/users': typeof AdminUsersRoute
  '/doctor/appointments': typeof DoctorAppointmentsRoute
  '/doctor/medical-records': typeof DoctorMedicalRecordsRoute
  '/doctor/patients': typeof DoctorPatientsRoute
  '/doctor/prescriptions': typeof DoctorPrescriptionsRoute
  '/doctor/reports': typeof DoctorReportsRoute
  '/doctor/schedule': typeof DoctorScheduleRoute
  '/doctor/slots': typeof DoctorSlotsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteRouteWithChildren
  '/aboutUs': typeof AboutUsRoute
  '/contacts': typeof ContactsRoute
  '/healthblog': typeof HealthblogRoute
  '/login': typeof LoginRoute
  '/pharmacies': typeof PharmaciesRoute
  '/services': typeof ServicesRoute
  '/signUp': typeof SignUpRoute
  '/theme-demo': typeof ThemeDemoRoute
  '/_layout/appointments': typeof LayoutAppointmentsRoute
  '/_layout/billing': typeof LayoutBillingRoute
  '/_layout/chat': typeof LayoutChatRoute
  '/_layout/dashboard': typeof LayoutDashboardRoute
  '/_layout/doctorDashboard': typeof LayoutDoctorDashboardRoute
  '/_layout/doctorSlots': typeof LayoutDoctorSlotsRoute
  '/_layout/messages': typeof LayoutMessagesRoute
  '/_layout/prescriptions': typeof LayoutPrescriptionsRoute
  '/_layout/profile': typeof LayoutProfileRoute
  '/_layout/records': typeof LayoutRecordsRoute
  '/_layout/settings': typeof LayoutSettingsRoute
  '/admin/notifications': typeof AdminNotificationsRoute
  '/admin/registrations': typeof AdminRegistrationsRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/system': typeof AdminSystemRoute
  '/admin/users': typeof AdminUsersRoute
  '/doctor/appointments': typeof DoctorAppointmentsRoute
  '/doctor/medical-records': typeof DoctorMedicalRecordsRoute
  '/doctor/patients': typeof DoctorPatientsRoute
  '/doctor/prescriptions': typeof DoctorPrescriptionsRoute
  '/doctor/reports': typeof DoctorReportsRoute
  '/doctor/schedule': typeof DoctorScheduleRoute
  '/doctor/slots': typeof DoctorSlotsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/aboutUs'
    | '/contacts'
    | '/healthblog'
    | '/login'
    | '/pharmacies'
    | '/services'
    | '/signUp'
    | '/theme-demo'
    | '/appointments'
    | '/billing'
    | '/chat'
    | '/dashboard'
    | '/doctorDashboard'
    | '/doctorSlots'
    | '/messages'
    | '/prescriptions'
    | '/profile'
    | '/records'
    | '/settings'
    | '/admin/notifications'
    | '/admin/registrations'
    | '/admin/reports'
    | '/admin/system'
    | '/admin/users'
    | '/doctor/appointments'
    | '/doctor/medical-records'
    | '/doctor/patients'
    | '/doctor/prescriptions'
    | '/doctor/reports'
    | '/doctor/schedule'
    | '/doctor/slots'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/aboutUs'
    | '/contacts'
    | '/healthblog'
    | '/login'
    | '/pharmacies'
    | '/services'
    | '/signUp'
    | '/theme-demo'
    | '/appointments'
    | '/billing'
    | '/chat'
    | '/dashboard'
    | '/doctorDashboard'
    | '/doctorSlots'
    | '/messages'
    | '/prescriptions'
    | '/profile'
    | '/records'
    | '/settings'
    | '/admin/notifications'
    | '/admin/registrations'
    | '/admin/reports'
    | '/admin/system'
    | '/admin/users'
    | '/doctor/appointments'
    | '/doctor/medical-records'
    | '/doctor/patients'
    | '/doctor/prescriptions'
    | '/doctor/reports'
    | '/doctor/schedule'
    | '/doctor/slots'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/aboutUs'
    | '/contacts'
    | '/healthblog'
    | '/login'
    | '/pharmacies'
    | '/services'
    | '/signUp'
    | '/theme-demo'
    | '/_layout/appointments'
    | '/_layout/billing'
    | '/_layout/chat'
    | '/_layout/dashboard'
    | '/_layout/doctorDashboard'
    | '/_layout/doctorSlots'
    | '/_layout/messages'
    | '/_layout/prescriptions'
    | '/_layout/profile'
    | '/_layout/records'
    | '/_layout/settings'
    | '/admin/notifications'
    | '/admin/registrations'
    | '/admin/reports'
    | '/admin/system'
    | '/admin/users'
    | '/doctor/appointments'
    | '/doctor/medical-records'
    | '/doctor/patients'
    | '/doctor/prescriptions'
    | '/doctor/reports'
    | '/doctor/schedule'
    | '/doctor/slots'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRouteRoute: typeof LayoutRouteRouteWithChildren
  AboutUsRoute: typeof AboutUsRoute
  ContactsRoute: typeof ContactsRoute
  HealthblogRoute: typeof HealthblogRoute
  LoginRoute: typeof LoginRoute
  PharmaciesRoute: typeof PharmaciesRoute
  ServicesRoute: typeof ServicesRoute
  SignUpRoute: typeof SignUpRoute
  ThemeDemoRoute: typeof ThemeDemoRoute
  AdminNotificationsRoute: typeof AdminNotificationsRoute
  AdminRegistrationsRoute: typeof AdminRegistrationsRoute
  AdminReportsRoute: typeof AdminReportsRoute
  AdminSystemRoute: typeof AdminSystemRoute
  AdminUsersRoute: typeof AdminUsersRoute
  DoctorAppointmentsRoute: typeof DoctorAppointmentsRoute
  DoctorMedicalRecordsRoute: typeof DoctorMedicalRecordsRoute
  DoctorPatientsRoute: typeof DoctorPatientsRoute
  DoctorPrescriptionsRoute: typeof DoctorPrescriptionsRoute
  DoctorReportsRoute: typeof DoctorReportsRoute
  DoctorScheduleRoute: typeof DoctorScheduleRoute
  DoctorSlotsRoute: typeof DoctorSlotsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/theme-demo': {
      id: '/theme-demo'
      path: '/theme-demo'
      fullPath: '/theme-demo'
      preLoaderRoute: typeof ThemeDemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signUp': {
      id: '/signUp'
      path: '/signUp'
      fullPath: '/signUp'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/services': {
      id: '/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ServicesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pharmacies': {
      id: '/pharmacies'
      path: '/pharmacies'
      fullPath: '/pharmacies'
      preLoaderRoute: typeof PharmaciesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/healthblog': {
      id: '/healthblog'
      path: '/healthblog'
      fullPath: '/healthblog'
      preLoaderRoute: typeof HealthblogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contacts': {
      id: '/contacts'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof ContactsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/aboutUs': {
      id: '/aboutUs'
      path: '/aboutUs'
      fullPath: '/aboutUs'
      preLoaderRoute: typeof AboutUsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/doctor/slots': {
      id: '/doctor/slots'
      path: '/doctor/slots'
      fullPath: '/doctor/slots'
      preLoaderRoute: typeof DoctorSlotsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/doctor/schedule': {
      id: '/doctor/schedule'
      path: '/doctor/schedule'
      fullPath: '/doctor/schedule'
      preLoaderRoute: typeof DoctorScheduleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/doctor/reports': {
      id: '/doctor/reports'
      path: '/doctor/reports'
      fullPath: '/doctor/reports'
      preLoaderRoute: typeof DoctorReportsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/doctor/prescriptions': {
      id: '/doctor/prescriptions'
      path: '/doctor/prescriptions'
      fullPath: '/doctor/prescriptions'
      preLoaderRoute: typeof DoctorPrescriptionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/doctor/patients': {
      id: '/doctor/patients'
      path: '/doctor/patients'
      fullPath: '/doctor/patients'
      preLoaderRoute: typeof DoctorPatientsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/doctor/medical-records': {
      id: '/doctor/medical-records'
      path: '/doctor/medical-records'
      fullPath: '/doctor/medical-records'
      preLoaderRoute: typeof DoctorMedicalRecordsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/doctor/appointments': {
      id: '/doctor/appointments'
      path: '/doctor/appointments'
      fullPath: '/doctor/appointments'
      preLoaderRoute: typeof DoctorAppointmentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/system': {
      id: '/admin/system'
      path: '/admin/system'
      fullPath: '/admin/system'
      preLoaderRoute: typeof AdminSystemRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/reports': {
      id: '/admin/reports'
      path: '/admin/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof AdminReportsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/registrations': {
      id: '/admin/registrations'
      path: '/admin/registrations'
      fullPath: '/admin/registrations'
      preLoaderRoute: typeof AdminRegistrationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/notifications': {
      id: '/admin/notifications'
      path: '/admin/notifications'
      fullPath: '/admin/notifications'
      preLoaderRoute: typeof AdminNotificationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/records': {
      id: '/_layout/records'
      path: '/records'
      fullPath: '/records'
      preLoaderRoute: typeof LayoutRecordsRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/profile': {
      id: '/_layout/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof LayoutProfileRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/prescriptions': {
      id: '/_layout/prescriptions'
      path: '/prescriptions'
      fullPath: '/prescriptions'
      preLoaderRoute: typeof LayoutPrescriptionsRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/messages': {
      id: '/_layout/messages'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof LayoutMessagesRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/doctorSlots': {
      id: '/_layout/doctorSlots'
      path: '/doctorSlots'
      fullPath: '/doctorSlots'
      preLoaderRoute: typeof LayoutDoctorSlotsRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/doctorDashboard': {
      id: '/_layout/doctorDashboard'
      path: '/doctorDashboard'
      fullPath: '/doctorDashboard'
      preLoaderRoute: typeof LayoutDoctorDashboardRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/dashboard': {
      id: '/_layout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/chat': {
      id: '/_layout/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof LayoutChatRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/billing': {
      id: '/_layout/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof LayoutBillingRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/appointments': {
      id: '/_layout/appointments'
      path: '/appointments'
      fullPath: '/appointments'
      preLoaderRoute: typeof LayoutAppointmentsRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
  }
}

interface LayoutRouteRouteChildren {
  LayoutAppointmentsRoute: typeof LayoutAppointmentsRoute
  LayoutBillingRoute: typeof LayoutBillingRoute
  LayoutChatRoute: typeof LayoutChatRoute
  LayoutDashboardRoute: typeof LayoutDashboardRoute
  LayoutDoctorDashboardRoute: typeof LayoutDoctorDashboardRoute
  LayoutDoctorSlotsRoute: typeof LayoutDoctorSlotsRoute
  LayoutMessagesRoute: typeof LayoutMessagesRoute
  LayoutPrescriptionsRoute: typeof LayoutPrescriptionsRoute
  LayoutProfileRoute: typeof LayoutProfileRoute
  LayoutRecordsRoute: typeof LayoutRecordsRoute
  LayoutSettingsRoute: typeof LayoutSettingsRoute
}

const LayoutRouteRouteChildren: LayoutRouteRouteChildren = {
  LayoutAppointmentsRoute: LayoutAppointmentsRoute,
  LayoutBillingRoute: LayoutBillingRoute,
  LayoutChatRoute: LayoutChatRoute,
  LayoutDashboardRoute: LayoutDashboardRoute,
  LayoutDoctorDashboardRoute: LayoutDoctorDashboardRoute,
  LayoutDoctorSlotsRoute: LayoutDoctorSlotsRoute,
  LayoutMessagesRoute: LayoutMessagesRoute,
  LayoutPrescriptionsRoute: LayoutPrescriptionsRoute,
  LayoutProfileRoute: LayoutProfileRoute,
  LayoutRecordsRoute: LayoutRecordsRoute,
  LayoutSettingsRoute: LayoutSettingsRoute,
}

const LayoutRouteRouteWithChildren = LayoutRouteRoute._addFileChildren(
  LayoutRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRouteRoute: LayoutRouteRouteWithChildren,
  AboutUsRoute: AboutUsRoute,
  ContactsRoute: ContactsRoute,
  HealthblogRoute: HealthblogRoute,
  LoginRoute: LoginRoute,
  PharmaciesRoute: PharmaciesRoute,
  ServicesRoute: ServicesRoute,
  SignUpRoute: SignUpRoute,
  ThemeDemoRoute: ThemeDemoRoute,
  AdminNotificationsRoute: AdminNotificationsRoute,
  AdminRegistrationsRoute: AdminRegistrationsRoute,
  AdminReportsRoute: AdminReportsRoute,
  AdminSystemRoute: AdminSystemRoute,
  AdminUsersRoute: AdminUsersRoute,
  DoctorAppointmentsRoute: DoctorAppointmentsRoute,
  DoctorMedicalRecordsRoute: DoctorMedicalRecordsRoute,
  DoctorPatientsRoute: DoctorPatientsRoute,
  DoctorPrescriptionsRoute: DoctorPrescriptionsRoute,
  DoctorReportsRoute: DoctorReportsRoute,
  DoctorScheduleRoute: DoctorScheduleRoute,
  DoctorSlotsRoute: DoctorSlotsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
